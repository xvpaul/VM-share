version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: supersecret
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks: [backend]

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"            # FastAPI
      - "6080:6080"            # novnc_proxy your code starts
      - "6900-6999:6900-6999"  # per-VM websockify your code starts
    volumes:
      # Match vm_profiles exactly
      - ./base_images/Alpine_Linux:/root/myapp/base_images/Alpine_Linux:ro
      - ./base_images/Tiny:/root/myapp/base_images/Tiny:ro
      - ./overlays/Alpine_Linux:/root/myapp/overlays/Alpine_Linux
      - ./overlays/Tiny:/root/myapp/overlays/Tiny
    networks: [backend]

volumes:
  db_data:

networks:
  backend:
